; SELCTION SORTING SUBROUTINE 
; TIME  : UPPERBOUND COMPLEXITY O{N(N-1)/2}
; SPACE : O(1)

SELSORT:
    POP 0X7F 
    POP 0X7E 
    POP DPH 
    POP DPL 
    POP ACC 
    PUSH 0X7E 
    PUSH 0X7F

; INITIAL LOCATION OF DATA POINTERS REGISTER 
DPTR_LOW    EQU 0X34
DPTR_HIGH   EQU 0X35 
COUNTER     EQU 0X36 

T_DPTR_LOW  EQU 0X32 
T_DPTR_HIGH EQU 0X33


    MOV R1,A                        ;COUNTER REGISTER 1 
    MOV R2,A                        ;COUNTER REGISTER 2
    MOV R3,DPL                      ;DATA POINTER LOCATION LOW 
    MOV R4,DPH                      ;DATA POINTER LOCAITON HIGH 

LOOP_SELSORT:
    CJNE R2,#0X00,EXIT_SELSORT      ;IF COUNTER REG. 0 EXIT SUBROUTINE 
    MOVX A,@DPTR 
    MOV R5,A 

REPEAT_SELSORT:
    INC DPTR 
    MOVX A,@DPTR 
    MOV R6,A 
    
    SUBB A,R5                        ;SWAPING IF GREATER ELEMETNS 
    JNC NOTSWAP
        MOV A,R6    
        XCH A,R5                     ;EXCHANGED REGIISTERS 
        MOV T_DPTR_HIGH,DPH 
        MOV T_DPTR_LOW,DPL
        MOV DPL,DPTR_LOW
        MOV DPH,DPTR_HIGH
        MOVX @DPTR,A 

        MOV DPL,T_DPTR_LOW
        MOV DPH,T_DPTR_HIGH
        MOV A,R5 
        MOVX @DPTR,A 
NOTSWAP:
    DJNZ R1,REPEAT_SELSORT
    MOV DPL,DPTR_LOW                ;INCREMENT INDEX COUNTER REGSITER 
    MOV DPH,DPTR_HIGH       
    INC DPTR                        ;INCREMENT DATA POINTER REGISTER 
    MOV DPTR_LOW,DPL        
    MOV DPTR_HIGH,DPH               ;AND MOVE INTO IT'S LOCATION 
    DEC R2                          ;DECREMENT COUNTER 2 REGISTER 
    SJMP LOOP_SELSORT               
EXIT_SELSORT:       
    RET                             ;RETURN SUBROUTINE  
